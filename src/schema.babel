// schema.js
import {
  GraphQLObjectType,
  GraphQLSchema,
  GraphQLInt
} from 'graphql/type';


import R from 'ramda';
//console.log(R.add(2, 3)); // test ramda

let count = 0;

// Some simple permission set
let permissions = ['read','write','getScore'];

// The extracted schema object
let schemaObject = {
  query: new GraphQLObjectType({
    name: 'RootQueryType',
    fields: {
      count: {
        type: GraphQLInt,
        description: 'the count',
        resolve: function() {
          return count;
        }
      },
      score: {
        type: GraphQLInt,
        description: 'the score',
        resolve: function() {
          return count;
        }
      }
    }
  }),
  mutation: new GraphQLObjectType({
    name: 'RootMutationType',
    fields: {
      updateCount: {
        type: GraphQLInt,
        description: 'Updates the count',
        resolve: function() {
          count += 1;
          return count;
        }
      }
    }
  })
};








let schema = new GraphQLSchema(schemaObject);

export default schema;
